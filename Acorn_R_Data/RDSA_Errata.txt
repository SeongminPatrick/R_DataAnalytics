Chapter 1 to 2.

https://www.packtpub.com/books/content/support/26217

-----------------------------------------------------
Chapter 1

1. page 21 line 1

   from 1 to 7  -->  1 to 6

-----------------------------------------------------
Chapter 2

2. page 37 line 5 

   dplyr, sqldf, dplyr  --->  dplyr : duplicated

3. page 38 line 9

   each expression 100 times  -->  1,000 times

4. page 48 line 5

    faster than g(n)  -->  slower than

5. Page 49 figure 2.10 / Loop / Rule definition

   n*O(g1(n))  -->  n*O(g(n)) 

-----------------------------------------------------
-----------------------------------------------------
-----------------------------------------------------
Chapter 3

** page 64 line 14

   ## Categorical Matrix  -->  Character Matrix (see line 1)

** page 74 line 4 from bottom

   findItem(llist$nextnode, item, size, itemFound)  # runtime error
   size  -->  pos

-----------------------------------------------------
Chapter 4

** page 84 line 1 from bottom

   Table 4.1 ...... for queue  -->  stack


** page 90 line 9 from bottom

   topVal = ...  -->  top = function()

   (see page 89 line 7. you define this function in class : top = function(){})


** page 91 line 12

   a$topVal  -->  link_stack_ex$top  (see the previous issue)


** page 96 line 7 from bottom

   function(qSize, ...)  -->  function(qSize=100, ...)   # runtime error


** page 99 line 12 from bottom

   cat("Empty Stack!")  -->  cat("Empty Queue!")


** page 102

   (1)
   Adict<-setRefClass(fields = list(           # runtime error

   -->
   Adict <- setRefClass(Class = "Dictionary",
        fields = list(

   (2)
   # remove value with following : remove  -->  find (or search)


** page 104 line 13 from bottom

   > dictvar$Size()  -->  size()  : lowercase (see page 102) 


-----------------------------------------------------
Chapter 5

** page 118 line 7

   (1) shell short  -->  shell sort

   (2) 3.2k-1  -> 3 * 2 k-1


** page 133 line 2 from bottom

   43 goes to the third bin  -->  fourth bin


** page 136. title of Table 5.3

   assorting -> sorting


-----------------------------------------------------
Chapter 6

** page 142 line 6

   previous i-1 elements  -->  i+1   (see the below code)


** page 158. Figure 6.12

   (1)
   K mod 10  -->  K mod 5   (see the page 157 line 4 from bottom)

   (2) Hash Table 
   As K mod 5, 865 should assigned to bucket 0, not to bucket 1.
   Thus, bucket 0 : 865 // bucket 1 : 651


** page 157 last sentence

   zero elements are assigned to bucket 1, one element is assigned to bucket 5, 
   two elements are assigned to buckets 1 and 2, and three elements are assigned to bucket 3.
   (* not exist bucket 5)

   -->

   one element is assigned to bucket 0, 1 and 4, two elements are assigned to buckets 2,
   and three elements are assigned to bucket 3.


** page 160 line 11 from bottom

   As a first step, ...... third slot  -->  slot 3   (see the figure 6.15)


-----------------------------------------------------
Chapter 7

** page 171 line 6 from bottom

   log2bi  -->  'i' maybe subscripted. It's because of the word 'bi block'.


** page 172. Figure 7.4

   right bottom cells : 15, 17, 42  -->  69, 75, 89


** page 174. Figure 7.6

  Kn+1  -->  Kn  (see the below sentence)





-----------------------------------------------------
Chapter 8

-----------------------------------------------------
Chapter 9

-----------------------------------------------------
Chapter 10




<그림시작>
<그림끝>

